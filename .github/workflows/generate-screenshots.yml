name: Generate App Store Screenshots

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'Sources/**'
      - 'project.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Sources/**'
      - 'project.yml'

jobs:
  screenshots:
    runs-on: macos-15
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode 16.4
        run: |
          # Xcode 16.4が利用可能かチェック
          if [ -d "/Applications/Xcode_16.4.app" ]; then
            sudo xcode-select -switch /Applications/Xcode_16.4.app
            echo "✅ Xcode 16.4 selected"
          elif [ -d "/Applications/Xcode_16.3.app" ]; then
            sudo xcode-select -switch /Applications/Xcode_16.3.app
            echo "⚠️ Xcode 16.3 selected (16.4 not available)"
          else
            echo "❌ Xcode 16.4 or 16.3 not found"
            exit 1
          fi

      - name: Show Xcode and SDK info
        run: |
          echo "=== Xcode Version ==="
          xcodebuild -version
          echo "=== Available SDKs ==="
          xcodebuild -showsdks
          echo "=== Available Simulators ==="
          xcrun simctl list devices available | grep -E "(iPhone|iPad)" || echo "No simulators found"

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Generate Xcode Project
        run: |
          xcodegen generate
          ls -la *.xcodeproj

      - name: Check available iOS runtimes
        run: |
          echo "=== Available iOS Runtimes ==="
          xcrun simctl list runtimes | grep "iOS" || echo "No iOS runtimes found"
          
          # iOS 18.5が利用可能かチェック
          if xcrun simctl list runtimes | grep -q "iOS 18.5"; then
            echo "✅ iOS 18.5 runtime available"
            export IOS_VERSION="18.5"
          elif xcrun simctl list runtimes | grep -q "iOS 18.4"; then
            echo "⚠️ iOS 18.4 runtime available (fallback from 18.5)"
            export IOS_VERSION="18.4"
          elif xcrun simctl list runtimes | grep -q "iOS 18.3"; then
            echo "⚠️ iOS 18.3 runtime available (fallback from 18.5)"
            export IOS_VERSION="18.3"
          else
            echo "❌ No iOS 18.x runtime available"
            exit 1
          fi

      - name: Setup simulators
        run: |
          echo "Using iOS version: $IOS_VERSION"
          
          # 利用可能なシミュレータを確認
          echo "=== Available iPhone Simulators ==="
          xcrun simctl list devices available | grep "iPhone" | grep "$IOS_VERSION" || echo "No iPhone simulators found for iOS $IOS_VERSION"
          
          echo "=== Available iPad Simulators ==="
          xcrun simctl list devices available | grep "iPad" | grep "$IOS_VERSION" || echo "No iPad simulators found for iOS $IOS_VERSION"

      - name: Build app for iPhone
        run: |
          echo "Building for iPhone simulator with iOS $IOS_VERSION..."
          xcodebuild -project BabySteps.xcodeproj \
            -scheme BabySteps \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15 Pro Max,OS=$IOS_VERSION" \
            -derivedDataPath build \
            -configuration Debug \
            CODE_SIGN_STYLE=Automatic \
            CODE_SIGNING_ALLOWED=NO \
            build \
            -quiet

      - name: Create screenshots directory
        run: mkdir -p screenshots

      - name: Generate iPhone screenshot
        run: |
          echo "Generating iPhone screenshot..."
          
          # iPhone 15 Pro Maxシミュレータを起動
          xcrun simctl boot "iPhone 15 Pro Max" || echo "iPhone simulator already booted"
          
          # シミュレータが完全に起動するまで待機
          echo "Waiting for iPhone simulator to fully boot..."
          sleep 10
          
          # アプリをインストール
          xcrun simctl install booted "build/Build/Products/Debug-iphonesimulator/BabySteps.app"
          
          # アプリを起動
          xcrun simctl launch booted com.yu1Ro5.BabySteps
          
          # アプリが完全に起動するまで待機
          echo "Waiting for app to fully launch..."
          sleep 8
          
          # スクリーンショットを撮影
          xcrun simctl io booted screenshot "screenshots/iphone_6.5inch.png"
          
          echo "✅ iPhone screenshot saved: screenshots/iphone_6.5inch.png"

      - name: Build app for iPad
        run: |
          echo "Building for iPad simulator with iOS $IOS_VERSION..."
          xcodebuild -project BabySteps.xcodeproj \
            -scheme BabySteps \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPad Pro (13-inch),OS=$IOS_VERSION" \
            -derivedDataPath build \
            -configuration Debug \
            CODE_SIGN_STYLE=Automatic \
            CODE_SIGNING_ALLOWED=NO \
            build \
            -quiet

      - name: Generate iPad screenshot
        run: |
          echo "Generating iPad screenshot..."
          
          # すべてのシミュレータをシャットダウン
          xcrun simctl shutdown all
          
          # iPad Pro (13-inch)シミュレータを起動
          xcrun simctl boot "iPad Pro (13-inch)" || echo "iPad simulator already booted"
          
          # シミュレータが完全に起動するまで待機
          echo "Waiting for iPad simulator to fully boot..."
          sleep 10
          
          # アプリをインストール
          xcrun simctl install booted "build/Build/Products/Debug-iphonesimulator/BabySteps.app"
          
          # アプリを起動
          xcrun simctl launch booted com.yu1Ro5.BabySteps
          
          # アプリが完全に起動するまで待機
          echo "Waiting for app to fully launch..."
          sleep 8
          
          # スクリーンショットを撮影
          xcrun simctl io booted screenshot "screenshots/ipad_13inch.png"
          
          echo "✅ iPad screenshot saved: screenshots/ipad_13inch.png"

      - name: Verify screenshots
        run: |
          echo "=== Screenshot Verification ==="
          ls -la screenshots/
          
          if [ -f "screenshots/iphone_6.5inch.png" ]; then
            echo "✅ iPhone screenshot exists"
            file "screenshots/iphone_6.5inch.png"
          else
            echo "❌ iPhone screenshot missing"
            exit 1
          fi
          
          if [ -f "screenshots/ipad_13inch.png" ]; then
            echo "✅ iPad screenshot exists"
            file "screenshots/ipad_13inch.png"
          else
            echo "❌ iPad screenshot missing"
            exit 1
          fi

      - name: Upload screenshots artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-store-screenshots
          path: screenshots/
          retention-days: 30

      - name: Cleanup simulators
        if: always()
        run: |
          echo "Cleaning up simulators..."
          xcrun simctl shutdown all || true

      - name: Summary
        run: |
          echo "=== Screenshot Generation Summary ==="
          echo "✅ iPhone 6.5-inch screenshot: screenshots/iphone_6.5inch.png"
          echo "✅ iPad 13-inch screenshot: screenshots/ipad_13inch.png"
          echo "📱 iOS version used: $IOS_VERSION"
          echo "🔧 XcodeGen project generated successfully"
          echo "📦 Screenshots uploaded as artifact: app-store-screenshots"